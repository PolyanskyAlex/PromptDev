---
description: 
globs: 
alwaysApply: false
---
{
  "context": "technical_documentation_rules",
  "description": "Специализированные правила для создания технической документации. Фокус на точности, полноте и практической применимости для разработчиков и технических специалистов.",
  
   "targetAudience": {
    "primary": "Разработчики, архитекторы, DevOps инженеры",
    "secondary": "Технические лиды, системные администраторы, QA инженеры",
    "assumptions": "Высокий уровень технической грамотности, знание основных концепций разработки ПО"
  },

  "structure": {
    "path": "Техническая документация должна лежать в docs\tech_docs\",
    "folders": "Каждому функциональному блоку должна соответствовать отдельная папка",
    "files": "Необходимо разбивать докуаментацию по каждому функциональному блоку на файлы по логике, сути и смыслу, что бы было удобно ориентироваться"
  },

  "documentTypes": {
    "apiDocumentation": {
      "purpose": "Полное описание API для интеграции и разработки",
      "structure": "Обзор → Аутентификация → Endpoints → Модели данных → Примеры → Коды ошибок",
      "format": "OpenAPI/Swagger совместимый формат в Markdown"
    },
    "architectureDocumentation": {
      "purpose": "Описание архитектуры системы для понимания и развития",
      "structure": "Обзор → Компоненты → Взаимодействия → Решения → Ограничения → Эволюция",
      "focus": "Принципы проектирования, паттерны, компромиссы"
    },
    "deploymentGuides": {
      "purpose": "Инструкции по развертыванию и настройке системы",
      "structure": "Требования → Подготовка → Установка → Конфигурация → Проверка → Мониторинг",
      "environment": "Отдельные инструкции для dev, staging, production"
    },
    "databaseDocumentation": {
      "purpose": "Описание структуры и логики базы данных",
      "structure": "Схема → Таблицы → Связи → Индексы → Процедуры → Миграции",
      "details": "Типы данных, ограничения, производительность"
    },
    "securityDocumentation": {
      "purpose": "Описание мер безопасности и требований",
      "structure": "Модель угроз → Механизмы защиты → Конфигурация → Аудит → Инциденты",
      "compliance": "Соответствие стандартам и регулированиям"
    }
  },

  "writingPrinciples": {
    "precision": {
      "accuracy": "Техническая точность и актуальность информации",
      "specificity": "Конкретные детали вместо общих описаний",
      "completeness": "Полнота информации для выполнения задач",
      "verification": "Проверяемость всех утверждений и примеров"
    },
    "structure": {
      "hierarchy": "Четкая иерархическая структура информации",
      "modularity": "Модульная организация для легкого обновления",
      "crossReferences": "Перекрестные ссылки между связанными разделами",
      "versioning": "Четкое указание версий и изменений"
    },
    "practicality": {
      "actionable": "Практические инструкции, которые можно выполнить",
      "examples": "Рабочие примеры кода и конфигураций",
      "troubleshooting": "Решения типичных проблем",
      "automation": "Скрипты и инструменты для автоматизации"
    }
  },

  "contentGuidelines": {
    "apiDocumentation": {
      "overview": {
        "purpose": "Назначение и возможности API",
        "baseUrl": "Базовый URL и версионирование",
        "authentication": "Методы аутентификации и авторизации",
        "rateLimit": "Ограничения на количество запросов"
      },
      "endpoints": {
        "method": "HTTP метод (GET, POST, PUT, DELETE, PATCH)",
        "path": "Полный путь с параметрами",
        "parameters": "Описание всех параметров с типами и ограничениями",
        "requestBody": "Структура тела запроса с примерами",
        "responses": "Все возможные ответы с кодами состояния",
        "examples": "Полные примеры запросов и ответов"
      },
      "dataModels": {
        "schemas": "Схемы всех объектов данных",
        "relationships": "Связи между объектами",
        "validation": "Правила валидации данных",
        "serialization": "Форматы сериализации (JSON, XML)"
      }
    },
    "architectureDocumentation": {
      "systemOverview": {
        "purpose": "Назначение и границы системы",
        "stakeholders": "Заинтересованные стороны и их потребности",
        "constraints": "Технические и бизнес ограничения",
        "assumptions": "Предположения и зависимости"
      },
      "componentDescription": {
        "responsibility": "Зона ответственности каждого компонента",
        "interfaces": "Интерфейсы взаимодействия",
        "dependencies": "Зависимости между компонентами",
        "deployment": "Особенности развертывания"
      },
      "designDecisions": {
        "rationale": "Обоснование архитектурных решений",
        "alternatives": "Рассмотренные альтернативы",
        "tradeoffs": "Компромиссы и их последствия",
        "evolution": "Планы развития архитектуры"
      }
    },
    "deploymentGuides": {
      "prerequisites": {
        "hardware": "Требования к аппаратному обеспечению",
        "software": "Необходимое программное обеспечение",
        "network": "Сетевые требования и конфигурация",
        "security": "Требования безопасности"
      },
      "installation": {
        "steps": "Пошаговые инструкции установки",
        "configuration": "Файлы конфигурации и их параметры",
        "verification": "Проверка корректности установки",
        "troubleshooting": "Решение проблем установки"
      },
      "maintenance": {
        "monitoring": "Настройка мониторинга и алертов",
        "backup": "Процедуры резервного копирования",
        "updates": "Процесс обновления системы",
        "scaling": "Масштабирование под нагрузку"
      }
    }
  },

  "codeExamples": {
    "quality": {
      "working": "Все примеры кода должны быть рабочими",
      "complete": "Полные примеры, а не фрагменты",
      "realistic": "Реалистичные сценарии использования",
      "tested": "Проверенные на актуальной версии системы"
    },
    "formatting": {
      "syntax": "Правильное выделение синтаксиса",
      "comments": "Комментарии для объяснения сложных частей",
      "structure": "Логическая структура и отступы",
      "naming": "Понятные имена переменных и функций"
    },
    "context": {
      "purpose": "Объяснение назначения примера",
      "prerequisites": "Необходимые условия для выполнения",
      "explanation": "Пошаговое объяснение кода",
      "variations": "Альтернативные варианты реализации"
    }
  },

  "diagramsAndSchemas": {
    "asciiDiagrams": {
      "architecture": {
        "components": "Схемы компонентов системы",
        "deployment": "Диаграммы развертывания",
        "dataFlow": "Потоки данных между компонентами",
        "network": "Сетевая топология"
      },
      "database": {
        "erd": "Entity-Relationship диаграммы",
        "schema": "Схемы таблиц и связей",
        "indexes": "Структура индексов",
        "partitioning": "Схемы партиционирования"
      },
      "api": {
        "flow": "Потоки API запросов",
        "authentication": "Схемы аутентификации",
        "integration": "Схемы интеграции с внешними системами",
        "versioning": "Стратегии версионирования API"
      }
    },
    "formatting": {
      "codeBlocks": "Использование блоков кода без указания языка",
      "alignment": "Правильное выравнивание элементов",
      "consistency": "Единообразный стиль во всех диаграммах",
      "legends": "Легенды для объяснения символов"
    }
  },

  "versioningAndMaintenance": {
    "versioning": {
      "strategy": "Стратегия версионирования документации",
      "changelog": "Детальный журнал изменений",
      "compatibility": "Информация о совместимости версий",
      "migration": "Руководства по миграции между версиями"
    },
    "maintenance": {
      "ownership": "Ответственные за поддержку каждого документа",
      "reviewCycle": "Регулярный цикл обзора и обновления",
      "automation": "Автоматизация проверки актуальности",
      "feedback": "Механизмы сбора обратной связи от разработчиков"
    },
    "quality": {
      "testing": "Тестирование примеров и инструкций",
      "validation": "Валидация технической корректности",
      "review": "Процесс технического ревью",
      "metrics": "Метрики качества документации"
    }
  },

  "integrationWithCode": {
    "codeComments": {
      "linking": "Связь между комментариями в коде и документацией",
      "generation": "Автоматическая генерация документации из комментариев",
      "synchronization": "Синхронизация изменений кода и документации",
      "standards": "Стандарты документирования в коде"
    },
    "testing": {
      "docTests": "Тестирование примеров в документации",
      "integration": "Интеграция с системой тестирования",
      "coverage": "Покрытие документацией API и функций",
      "validation": "Автоматическая валидация примеров"
    },
    "cicd": {
      "generation": "Автоматическая генерация документации в CI/CD",
      "deployment": "Развертывание документации вместе с кодом",
      "validation": "Проверка документации в пайплайне",
      "notifications": "Уведомления об изменениях в документации"
    }
  },

  "securityConsiderations": {
    "sensitiveInformation": {
      "credentials": "Никогда не включать реальные учетные данные",
      "secrets": "Использование заглушек для секретов",
      "endpoints": "Осторожность с внутренними endpoints",
      "data": "Анонимизация примеров данных"
    },
    "accessControl": {
      "permissions": "Документирование требований к разрешениям",
      "roles": "Описание ролей и их возможностей",
      "authentication": "Детальное описание методов аутентификации",
      "authorization": "Правила авторизации для каждого API"
    },
    "compliance": {
      "standards": "Соответствие стандартам безопасности",
      "regulations": "Соблюдение регулятивных требований",
      "auditing": "Требования к аудиту и логированию",
      "privacy": "Защита персональных данных"
    }
  },

  "performanceConsiderations": {
    "optimization": {
      "guidelines": "Рекомендации по оптимизации производительности",
      "bottlenecks": "Описание потенциальных узких мест",
      "monitoring": "Метрики для мониторинга производительности",
      "tuning": "Параметры настройки производительности"
    },
    "scalability": {
      "patterns": "Паттерны масштабирования",
      "limits": "Ограничения и пороговые значения",
      "capacity": "Планирование мощности",
      "testing": "Нагрузочное тестирование"
    }
  }
}
