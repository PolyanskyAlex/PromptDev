---
description: 
globs: 
alwaysApply: false
---
---
description: 
globs: 
alwaysApply: false
---
{
  "context": "bugfixing_rules",
  "description": "Набор принципов и лучших практик для процесса исправления ошибок. Эти правила используются на шаге 'Багфиксинг' в пайплайнах разработки и деплоя.",
  
  "corePhilosophy": {
    "purpose": "Цель багфиксинга — не создание новой задачи, а доведение текущей провалившейся подзадачи до состояния 'Выполнена' путем устранения коренной причины ошибки.",
    "isolation": "Исправление бага происходит в рамках текущей ветки и кода, относящегося к подзадаче. Новые задачи или ветки не создаются.",
    "cyclicality": "Процесс багфиксинга является частью цикла 'Тестирование -> Багфиксинг -> Тестирование'."
  },

  "bugAnalysisSteps": {
    "title": "Последовательность анализа ошибки",
    "steps": [
      {
        "step": 1, "name": "Анализ источника сбоя",
        "action": "Определи источник сбоя. Если ошибка произошла в CI/CD, в первую очередь проанализируй логи пайплайна (GitHub Actions) как первоисточник. Если ошибка воспроизводится локально, опирайся на логи тестов и отладчик. Пойми точные условия, при которых она возникает."
      },
      {
        "step": 2, "name": "Анализ коренной причины (Root Cause Analysis)",
        "action": "Используя отладчик, логи и анализ кода, найти точную причину проблемы, а не исправлять только ее симптомы."
      },
      {
        "step": 3, "name": "Создание регрессионного теста",
        "action": "Перед исправлением кода написать новый автоматический тест (юнит или интеграционный), который падает именно из-за этого бага. Этот тест станет доказательством исправления и защитой от регрессии в будущем."
      }
    ]
  },

  "fixImplementationRules": {
    "title": "Правила внесения исправлений",
    "rules": [
      "Исправлять код, следуя общим правилам разработки из `.cursor/rules/dev.mdc` (SOLID, KISS, DRY).",
      "Избегать 'костылей' и поверхностных патчей. Решение должно быть надежным и чистым.",
      "Добавить или улучшить логирование в проблемной области кода для облегчения диагностики в будущем.",
      "Если исправление затрагивает контракты API или структуру данных, убедиться, что соответствующая документация будет обновлена."
    ]
  },

  "postFixActions": {
    "title": "Действия после исправления кода",
    "steps": [
      {
        "step": 1, "name": "Запуск тестов",
        "action": "Запустить новый регрессионный тест и убедиться, что теперь он проходит. Затем запустить все тесты, связанные с измененным модулем, чтобы проверить отсутствие регрессий."
      },
      {
        "step": 2, "name": "Возврат в пайплайн",
        "action": "После успешного локального прохождения тестов, передать управление обратно на шаг 'Тестирование' в основном пайплайне для полной валидации в CI-окружении."
      },
      {
        "step": 3, "name": "Коммит",
        "action": "Включить исправление в коммит текущей подзадачи. В сообщении коммита явно указать, какой баг был исправлен, например: `fix(auth): correct password validation logic to prevent login failure\n\nResolves bug identified during testing of task #1.1.2.`"
      }
    ]
  }
}